name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
#  pull_request:
#    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Build the Docker image
      run: docker compose build
    - name: Run container
      run: |
        docker compose up -d
    - name: Check loading services
      run: |
        chmod +x ./scripts/wait-script.sh
        chmod +x ./scripts/wait-for.sh
        chmod +x ./scripts/test-script.sh
        ./scripts/wait-script.sh
      env:
        WAIT_PORTS: 8080,8070,8060,8050
    - name: Check service dropout on 8050 port
      run: |
        ./scripts/test-script.sh
      env:
        VARIANT: v2
        SERVICE_NAME: loyalty_service
        PORT_NUMBER: 8050

  publish:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
    - uses: actions/checkout@v3
    - name: Pull docker image to docker registry
      env:
        registry_token: ${{ secrets.REGISTRY_PULL_TOKEN }}
      run: |
        echo $registry_token | docker login -u laserkillers --password-stdin

        cd ./webapp

        docker build -f DockerFileReserveServiceRun -t laserkillers/rsoi-lab-4-reserve-service:latest .
        docker push laserkillers/rsoi-lab-4-reserve-service:latest
        
        docker build -f DockerFilePaymentServiceRun -t laserkillers/rsoi-lab-4-payment-service:latest .
        docker push laserkillers/rsoi-lab-4-payment-service:latest

        docker build -f DockerFileLoyaltyServiceRun -t laserkillers/rsoi-lab-4-loyalty-service:latest .
        docker push laserkillers/rsoi-lab-4-loyalty-service:latest

        docker build -f DockerFileGatewayRun -t laserkillers/rsoi-lab-4-gateway:latest .
        docker push laserkillers/rsoi-lab-4-gateway

  run_api_tests:
    runs-on: ubuntu-latest
    needs: [ publish ]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # INstall Node on the runner
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      # Install the newman command line utility and also install the html extra reporter
      - name: Install newman
        run: npm install -g newman

      # Install the html extra reporter
#      - name: Install reporter
#        run: npm install -g newman-reporter-htmlextra

      # Make directory to upload the test results
      - name: Make Directory for results
        run: mkdir -p testResults

      # Run the POSTMAN collection
      - name: Run POSTMAN collection
        run: |
          newman run ./postman/postman_collection.json -e ./postman/postman_environment.json

      # Upload the contents of Test Results directory to workspace
      - name: Output the run Details
        uses: actions/upload-artifact@v2
        with:
          name: RunReports
          path: testResults
